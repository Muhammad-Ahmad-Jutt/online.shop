"""
Django settings for learning_django project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    
    'django_celery_beat',
    'django_celery_results',

    'users',
    'stores',
    'products',

]
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}
AUTH_USER_MODEL = 'users.CoreUser'
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=int(os.getenv("jwt_ACCESS_TOKEN_LIFETIME_MINUTES"))),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=int(os.getenv("jwt_REFRESH_TOKEN_LIFETIME_DAYS"))),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": True, 
    "UPDATE_LAST_LOGIN": False,

    "ALGORITHM": "HS256",
    "SIGNING_KEY": os.getenv("SECRET_KEY"),
    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",


    "AUTH_TOKEN_CLASSES": (
        "rest_framework_simplejwt.tokens.AccessToken",
        "rest_framework_simplejwt.tokens.RefreshToken",
    ),

    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",

    "JTI_CLAIM": "jti",

    "TOKEN_BLACKLIST_SERIALIZER": "rest_framework_simplejwt.serializers.TokenBlacklistSerializer",
}

AUTHENTICATION_BACKENDS = [
    'users.backend.CUSTOMEMAILBACKEND',
    'django.contrib.auth.backends.ModelBackend',
    
]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'learning_django.urls'
# EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# EMAIL_HOST = "192.168.3.127"  # Use the working IP
# EMAIL_PORT = 5025  # Use 5025 since 25 is closed
# EMAIL_USE_TLS = False  # No TLS required for smtp4dev
# EMAIL_USE_SSL = False  # No SSL required for smtp4dev
# EMAIL_HOST_USER = ""  # No authentication needed
# EMAIL_HOST_PASSWORD = ""  # No authentication needed
# DEFAULT_FROM_EMAIL = "test@example.com"  # Change as needed

# EMAIL_BACKEND = os.getenv("EMAIL_BACKEND")
# EMAIL_HOST = os.getenv("EMAIL_HOST") 
# EMAIL_PORT = os.getenv("EMAIL_PORT")  
# # EMAIL_USE_TLS = bool(os.getenv("EMAIL_USE_TLS"))  not getting from env so i have to change here
# # EMAIL_USE_SSL = bool(os.getenv("EMAIL_USE_SSL"))
# EMAIL_USE_TLS = False  # No TLS required for smtp4dev
# EMAIL_USE_SSL = False  # No SSL required for smtp4dev
# EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER") or ""  # Set to "" if None
# EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD") or ""  # Set to "" if None
# DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL")  
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST', '192.168.3.127')  # Correct SMTP server
EMAIL_PORT = os.getenv('EMAIL_PORT', 5025)
EMAIL_USE_TLS = False  # You already have this set
EMAIL_USE_SSL = False  # As you mentioned, no SSL needed
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL', 'dev@dev.com')


CELERY_BROKER_URL = f"{os.getenv('REDIS_BROKER_URL')}:{os.getenv('REDIS_BROKER_PORT')}"
CELERY_RESULT_BACKEND = f"{os.getenv('REDIS_BROKER_URL')}:{os.getenv('REDIS_BROKER_PORT')}"
CELERY_BROKER_PORT = os.getenv('REDIS_BROKER_PORT')
CELERY_ACCEPT_CONTENT = [str(os.getenv('REDIS_ACCEPT_CONTENT'))]
CELERY_TASK_SERIALIZER = str(os.getenv('REDIS_TASK_SERIALIZER'))
CELERY_RESULT_SERIALIZER = str(os.getenv('REDIS_RESULT_SERIALIZER'))
CELERY_TIMEZONE =os.getenv('TIME_ZONE')




TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'learning_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.getenv('DATABASE_ENGINE'),
        'NAME': os.getenv('DATABASE_NAME'),
        'USER': os.getenv('DATABASE_USERNAME'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD'),
        'HOST': os.getenv('DATABASE_HOST'),
        'PORT': os.getenv('DATABASE_PORT')
    }
}



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = os.getenv('TIME_ZONE')
# TIME_ZONE = 'Asia/Karachi'  # Set this to Pakistan Standard Time (PKT)
    
USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
